rbinom(10000, mean_coverage, sd_coverage)
ggplot() +
geom_histogram(aes(x=samples_means, y=..density..), bins = 25, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means), color="black", size=1)
mean_coverage_2021 <- mean(data_2021$coverage)
sd_coverage_2021 <- sd(data_2021$coverage)
mean_null_2018 <- mean(samples_means)
samples_means = n %>%
replicate(sample(data_2018$coverage, 25)) %>%
t() %>%
apply(  1, mean)
samples_means = n %>%
replicate(sample(data_2018$coverage, 25)) %>%
t() %>%
apply(1, mean)
ggplot() +
geom_histogram(aes(x=samples_means, y=..density..), bins = 25, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means), color="black", size=1)
n = 10000
samples_means = n %>%
replicate(sample(data_2018$coverage, 25)) %>%
t() %>%
apply(1, mean)
ggplot() +
geom_histogram(aes(x=samples_means, y=..density..), bins = 25, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means), color="black", size=1)
n = 100
samples_means = n %>%
replicate(sample(data_2018$coverage, 25)) %>%
t() %>%
apply(1, mean)
set.seed(42)
samples_means = n %>%
replicate(sample(data_2018$coverage, 25)) %>%
t() %>%
apply(1, mean)
ggplot() +
geom_histogram(aes(x=samples_means, y=..density..), bins = 25, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means), color="black", size=1)
n = 10000
set.seed(42)
samples_means = n %>%
replicate(sample(data_2018$coverage, 25)) %>%
t() %>%
apply(1, mean)
ggplot() +
geom_histogram(aes(x=samples_means, y=..density..), bins = 25, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means), color="black", size=1)
ttest(mean_null_2018,mean_coverage_2021)
t.test(mean_null_2018,mean_coverage_2021)
t.test(data_2021,samples_means)
mean(data_2021$coverage)
mean(data_2018$coverage)
samples_means_21 = n %>%
replicate(sample(data_2021$coverage, 25)) %>%
t() %>%
apply(1, mean)
geom_density(aes(x=samples_means_21), color="black", size=1)
n %>%
replicate(sample(data_2021$coverage, 25)) %>%
t() %>%
apply(1, mean)
data_2021$coverage
n %>%
replicate(sample(data_2021$coverage, 25)) %>%
t() %>%
apply(1, mean)
samples_means_18 = n %>%
replicate(sample(data_2018$coverage, 10)) %>%
t() %>%
apply(1, mean)
samples_means_21 = n %>%
replicate(sample(data_2021$coverage, 10)) %>%
t() %>%
apply(1, mean)
geom_density(aes(x=samples_means_21), color="black", size=1)
ggplot() +
geom_histogram(aes(x=samples_means, y=..density..), bins = 25, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means_18), color="black", size=1)
samples_means_18 = n %>%
replicate(sample(data_2018$coverage, 60)) %>%
t() %>%
apply(1, mean)
ggplot() +
geom_histogram(aes(x=samples_means, y=..density..), bins = 25, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means_18), color="black", size=1)
samples_means_18 = n %>%
replicate(sample(data_2018$coverage, 25)) %>%
t() %>%
apply(1, mean)
samples_means_18 = n %>%
replicate(sample(data_2018$coverage, 10)) %>%
t() %>%
apply(1, mean)
ggplot() +
geom_histogram(aes(x=samples_means, y=..density..), bins = 10, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means_18), color="black", size=1)
samples_means_21 = n %>%
replicate(sample(data_2021$coverage, 10)) %>%
t() %>%
apply(1, mean)
set.seed(42)
samples_means_21 = n %>%
replicate(sample(data_2021$coverage, 10)) %>%
t() %>%
apply(1, mean)
geom_density(aes(x=samples_means_21), color="black", size=1)
geom_density(aes(x=samples_means_21), color="red", size=1)
n %>%
replicate(sample(data_2021$coverage, 10)) %>%
t() %>%
apply(1, mean)
mean(samples_means_21)
geom_density(aes(x=samples_means_21), color="red", size=1)
t.test(samples_means_18,samples_means_21)
samples_means_18 = n %>%
replicate(sample(data_2018$coverage, 10)) %>%
t() %>%
apply(1, mean)
samples_means_21 = n %>%
replicate(sample(data_2021$coverage, 10)) %>%
t() %>%
apply(1, mean)
geom_density(aes(x=samples_means_21), color="red", size=1)
samples_means_18 = n %>%
replicate(sample(data_2018$coverage, 10)) %>%
apply(2, mean)
samples_means_18 = n %>%
replicate(sample(data_2018$coverage, 10)) %>%
apply(2, mean)
samples_means_21 = n %>%
replicate(sample(data_2021$coverage, 10)) %>%
apply(2, mean)
mean(samples_means_21)
geom_density(aes(x=samples_means_21), color="red", size=1)
ggplot() +
geom_histogram(aes(x=samples_means, y=..density..), bins = 10, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means_18), color="black", size=1)
ggplot() +
geom_histogram(aes(x=samples_means, y=..density..), bins = 10, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means_18), color="black", size=1) +
geom_density(aes(x=samples_means_21), color="red", size=1)
samples_means_18 = n %>%
replicate(sample(data_2018$coverage, 20)) %>%
apply(2, mean)
samples_means_21 = n %>%
replicate(sample(data_2021$coverage, 20)) %>%
apply(2, mean)
ggplot() +
geom_histogram(aes(x=samples_means, y=..density..), bins = 20, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means_18), color="black", size=1) +
geom_density(aes(x=samples_means_21), color="red", size=1)
geom_density(aes(x=samples_means_21), color="red", size=1)
ggplot() +
geom_histogram(aes(x=samples_means_18, y=..density..), bins = 20, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means_18), color="black", size=1) +
geom_histogram(aes(x=samples_means_21, y=..density..), bins = 20, alpha=0.1, color="black", size=0.05)+
geom_density(aes(x=samples_means_21), color="red", size=1)
n %>%
replicate(sample(data_2021$coverage, 25)) %>%
apply(2, mean)
samples_means_18 = n %>%
replicate(sample(data_2018$coverage, 24)) %>%
apply(2, mean)
samples_means_21 = n %>%
replicate(sample(data_2021$coverage, 24)) %>%
apply(2, mean)
ggplot() +
geom_histogram(aes(x=samples_means_18, y=..density..), bins = 24, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means_18), color="black", size=1) +
geom_histogram(aes(x=samples_means_21, y=..density..), bins = 24, alpha=0.1, color="black", size=0.05)+
geom_density(aes(x=samples_means_21), color="red", size=1)
n %>%
replicate(sample(data_2021$coverage, 25)) %>%
apply(2, mean)
samples_means_18 = n %>%
replicate(sample(data_2018$coverage, 20)) %>%
apply(2, mean)
samples_means_21 = n %>%
replicate(sample(data_2021$coverage, 20)) %>%
apply(2, mean)
ggplot() +
geom_histogram(aes(x=samples_means_18, y=..density..), bins = 24, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means_18), color="black", size=1) +
geom_histogram(aes(x=samples_means_21, y=..density..), bins = 24, alpha=0.1, color="black", size=0.05)+
geom_density(aes(x=samples_means_21), color="red", size=1)
t.test(samples_means_18,samples_means_21)
ggplot() +
geom_histogram(aes(x=samples_means_18, y=..density..), bins = 100, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means_18), color="black", size=1) +
geom_histogram(aes(x=samples_means_21, y=..density..), bins = 100, alpha=0.1, color="black", size=0.05)+
geom_density(aes(x=samples_means_21), color="red", size=1)
ggplot() +
geom_histogram(aes(x=samples_means_18, y=..density..), bins = 50, alpha=0.1, color="black", size=0.05) +
geom_density(aes(x=samples_means_18), color="black", size=1) +
geom_histogram(aes(x=samples_means_21, y=..density..), bins = 50, alpha=0.1, color="black", size=0.05)+
geom_density(aes(x=samples_means_21), color="red", size=1)
library(tidyverse)
complete_data
set.seed(110)
data_1 = tibble(measure=rnorm(5, 10, 1))
data_1$site_name <- 'Site 1'
data_2 = tibble(measure=rnorm(5, 10, 1))
data_2$site_name <- 'Site 2'
complete_data = rbind(data_1, data_2)
complete_data
mean(complete_data[complete_data$site_name == "Site 1", ]$measure)
mean(complete_data[complete_data$site_name == "Site 2", ]$measure)
tapply(complete_data$measure, complete_data$site_name, mean)
set.seed(110)
data_1 = tibble(measure=rnorm(40, 10, 1))
data_1$site_name <- 'Site 1'
data_2 = tibble(measure=rnorm(40, 13, 1))
data_2$site_name <- 'Site 2'
complete_data = rbind(data_1, data_2)
ggplot(complete_data, aes(x=measure, fill = site_name)) +
geom_density(alpha = 0.4, bw =0.60) +
xlim(5,18)
ata_1$site_name <- 'Site 1'
data_2 = tibble(measure=rnorm(40, 10, 1))
data_2$site_name <- 'Site 2'
complete_data = rbind(data_1, data_2)
ggplot(complete_data, aes(x=measure, fill = site_name)) +
geom_density(alpha = 0.4, bw =0.60) +
xlim(5,18)
set.seed(110)
data_1 = tibble(measure=rnorm(40, 10, 1))
data_1$site_name <- 'Site 1'
data_2 = tibble(measure=rnorm(40, 10, 1))
data_2$site_name <- 'Site 2'
complete_data = rbind(data_1, data_2)
ggplot(complete_data, aes(x=measure, fill = site_name)) +
geom_density(alpha = 0.4, bw =0.60) +
xlim(5,18)
ratios =c(0.60, 0.61, 0.19, 0.19, 0.21,0.20)
coral_proportions = tibble(coral_sp, ratios)
coral_sp = c("P. lobata","P. lobata", "M. capitata", "M. capitata", "P. mendrina","P. mendrina")
ratios =c(0.60, 0.61, 0.19, 0.19, 0.21,0.20)
coral_proportions = tibble(coral_sp, ratios)
coral_multinom = function(){
true_proportions = c(0.60,0.19,0.21)
sample_proportions = rmultinom(1, 200, prob=c(0.61,0.19,0.20))/200
sample_tvd = sum(abs(true_proportions- sample_proportions))/2
sample_tvd
}
sampleOneIteration()
coral_multinom()
coral_multinom = function(){
true_proportions = c(0.60,0.19,0.21)
sample_proportions = rmultinom(1, 200, prob=c(0.61,0.19,0.20))/200
sample_tvd = sum(abs(true_proportions- sample_proportions))/2
sample_tvd
}
coral_multinom()
coral_multinom()
tvds = replicate(1000, coral_multinom())
p_value
p_value = sum(tvds > observed_stat)  / length(tvds)
p_value
p_value = sum(tvds > observed_stat)  / length(tvds)
observed_stat = sum(tapply(coral_proportions$ratios, coral_proportions$coral_sp, subtract_abs))/2
subtract_abs = function(x){
abs(x[1] - x[2])
}
observed_stat = sum(tapply(coral_proportions$ratios, coral_proportions$coral_sp, subtract_abs))/2
tvds = replicate(1000, coral_multinom())
p_value = sum(tvds > observed_stat)  / length(tvds)
p_value
sum(tapply(coral_proportions$ratios, coral_proportions$coral_sp, subtract_abs))/2
observed_stat = sum(tapply(coral_proportions$ratios, coral_proportions$coral_sp, subtract_abs))/2
tvds = replicate(1000, coral_multinom())
p_value = sum(tvds > observed_stat)/length(tvds)
p_value
ggplot()+
geom_histogram(aes(tvds, ..density..), bins = 15) +
geom_point(aes(observed_stat, 0), size=5, color="red")
complete_data = rbind(data_1, data_2)
mean(new_data_1) - mean(new_data_2)
Bootstrap_concat = function(data_1, data_2){
concat_data = c(data_1, data_2)
len_concat_data = length(concat_data)
len_data_1 = length(data_1)
shuffled_data = sample(concat_data)
new_data_1 = shuffled_data[1:len_data_1]
new_data_2 = shuffled_data[(len_data_1+1):len_concat_data]
mean(new_data_1) - mean(new_data_2)
}
processOneIter(data_1, data_2)
Bootstrap_concat(data_1, data_2)
observed_value
observed_value = mean(data_1) - mean(data_2)
Bootstrap_concat = function(data_1$measure, data_2$measure){
concat_data = c(data_1, data_2)
len_concat_data = length(concat_data)
len_data_1 = length(data_1)
shuffled_data = sample(concat_data)
new_data_1 = shuffled_data[1:len_data_1]
new_data_2 = shuffled_data[(len_data_1+1):len_concat_data]
mean(new_data_1) - mean(new_data_2)
}
Bootstrap_concat = function(data_1$measure, data_2$measure){
concat_data = c(data_1, data_2)
len_concat_data = length(concat_data)
len_data_1 = length(data_1)
shuffled_data = sample(concat_data)
new_data_1 = shuffled_data[1:len_data_1]
new_data_2 = shuffled_data[(len_data_1+1):len_concat_data]
mean(new_data_1) - mean(new_data_2)
}
Bootstrap_concat = function(data_1, data_2){
concat_data = c(data_1, data_2)
len_concat_data = length(concat_data)
len_data_1 = length(data_1)
shuffled_data = sample(concat_data)
new_data_1 = shuffled_data[1:len_data_1]
new_data_2 = shuffled_data[(len_data_1+1):len_concat_data]
mean(new_data_1) - mean(new_data_2)
}
Bootstrap_concat(data_1, data_2)
Bootstrap_concat = function(data_1, data_2){
concat_data = c(data_1, data_2)
len_concat_data = length(concat_data)
len_data_1 = length(data_1)
shuffled_data = sample(concat_data)
new_data_1 = shuffled_data[1:len_data_1]
new_data_2 = shuffled_data[(len_data_1+1):len_concat_data]
mean(new_data_1) - mean(new_data_2)
}
Bootstrap_concat(data_1, data_2)
Bootstrap_concat(data_1$measure, data_2$measure)
bootstrap_concat = function(data_1, data_2){
concat_data = c(data_1, data_2)
len_concat_data = length(concat_data)
len_data_1 = length(data_1)
shuffled_data = sample(concat_data)
new_data_1 = shuffled_data[1:len_data_1]
new_data_2 = shuffled_data[(len_data_1+1):len_concat_data]
mean(new_data_1) - mean(new_data_2)
}
bootstrap_concat(data_1$measure, data_2$measure)
bootstrap_concat(data_1$measure, data_2$measure)
observed_value = mean(data_1) - mean(data_2)
observed_value = mean(data_1$measure) - mean(data_2$measure)
observed_value
mean_under_null = replicate(1000, bootstrap_concat(data_1$measure, data_2$measure))
ggplot()+
geom_histogram(aes(mean_under_null, y=..density..), bins =30, alpha=0.2, color="black") +
geom_density(aes(mean_under_null), bw=0.2, size=0.5) +
xlim(-5, 5) +
geom_point(aes(observed_value, 0), color="red", size=10)
ggplot()+
geom_histogram(aes(mean_under_null, y=..density..), bins =30, alpha=0.2, color="black") +
geom_density(aes(mean_under_null), bw=0.2, size=0.5) +
xlim(-5, 5) +
geom_point(aes(observed_value, 0), color="red", size=5)
ggplot()+
geom_histogram(aes(mean_under_null, y=..density..), bins =30, alpha=0.2, color="black") +
geom_density(aes(mean_under_null), bw=0.5, size=0.5) +
xlim(-5, 5) +
geom_point(aes(observed_value, 0), color="red", size=5)
ggplot()+
geom_histogram(aes(mean_under_null, y=..density..), bins =30, alpha=0.2, color="black") +
geom_density(aes(mean_under_null), bw=0.06, size=0.5) +
xlim(-5, 5) +
geom_point(aes(observed_value, 0), color="red", size=5)
ggplot()+
geom_histogram(aes(mean_under_null, y=..density..), bins =30, alpha=0.2, color="black") +
geom_density(aes(mean_under_null), bw=0.05, size=0.5) +
xlim(-5, 5) +
geom_point(aes(observed_value, 0), color="red", size=5)
sum(mean_under_null <= observed_value) / length(mean_under_null)
source("C:/Users/Sam/Desktop/Data science in R/Weekly practicals_Shedd/Week_7_rstudio.R")
library(tidyverse)
##The survey_data should be a tibble
##The files in the file are delimited. You can change read_csv's behavior to split on tabs,
##rather that on comma (","), which is the default behavior
setwd("C:\\Users\\Sam\\Desktop\\Data science in R\\Weekly practicals_Shedd")
survey_data <- read.csv("RIKZ.txt", sep="\t", header=TRUE)
survey_data$richness = rowSums(survey_data[,2:76]>0)
survey_data_richness <- survey_data[,77:90]
lm_richness <- lm(richness~., data = survey_data_richness[,2:14])
lm(richness~angle1, data = survey_data_richness)
summary(lm(richness~angle1, data = survey_data_richness))
ggplot(survey_data_richness) +
geom_point(aes(x=temperature, y=richness)) +
geom_abline(intercept = lm_richness$coefficients[1], slope = lm_richness$coefficients[2], color = 2, size=2, alpha=0.5)
ggplot(survey_data_richness) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness$coefficients[1], slope = lm_richness$coefficients[2], color = 2, size=2, alpha=0.5)
ggplot(survey_data_richness) +
geom_point(aes(x=log(NAP), y=richness)) +
geom_abline(intercept = lm_richness$coefficients[1], slope = lm_richness$coefficients[2], color = 2, size=2, alpha=0.5)
ggplot(survey_data_richness) +
geom_point(aes(x=NAP^2, y=richness)) +
geom_abline(intercept = lm_richness$coefficients[1], slope = lm_richness$coefficients[2], color = 2, size=2, alpha=0.5)
ggplot(survey_data_richness) +
geom_point(aes(x=penetrability, y=richness)) +
geom_abline(intercept = lm_richness$coefficients[1], slope = lm_richness$coefficients[2], color = 2, size=2, alpha=0.5)
ggplot(survey_data_richness) +
geom_point(aes(x=log(penetrability), y=richness)) +
geom_abline(intercept = lm_richness$coefficients[1], slope = lm_richness$coefficients[2], color = 2, size=2, alpha=0.5)
ggplot(survey_data_richness) +
geom_point(aes(x=humus, y=richness)) +
geom_abline(intercept = lm_richness$coefficients[1], slope = lm_richness$coefficients[2], color = 2, size=2, alpha=0.5)
ggplot(survey_data_richness) +
geom_point(aes(x=grainsize, y=richness)) +
geom_abline(intercept = lm_richness$coefficients[1], slope = lm_richness$coefficients[2], color = 2, size=2, alpha=0.5)
ggplot(survey_data_richness) +
geom_point(aes(x=Beach, y=richness)) +
geom_abline(intercept = lm_richness$coefficients[1], slope = lm_richness$coefficients[2], color = 2, size=2, alpha=0.5)
summary(lm(richness~NAP, data = survey_data_richness))
summary(lm(richness~penetrability, data = survey_data_richness))
ggplot(survey_data_richness) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
lm_richness_NAP <- lm(richness~NAP, data = survey_data_richness)
ggplot(survey_data_richness) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
lm_richness_NAP <- lm(richness~-NAP, data = survey_data_richness)
summary(lm_richness_NAP)
ggplot(survey_data_richness) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
ggplot(survey_data_richness) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
lm_richness_NAP <- lm(richness~-(NAP), data = survey_data_richness)
ggplot(survey_data_richness) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
lm_richness_NAP <- lm(richness~NAP, data = survey_data_richness)
ggplot(survey_data_richness) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
lm_richness_NAP <- lm(richness~I(NAP), data = survey_data_richness)
ggplot(survey_data_richness) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
summary(lm_richness_NAP)
residuals(lm_richness_NAP)
sum(residuals(lm_richness_NAP))
lm_richness_NAP <- lm(richness~I(NAP), data = survey_data_richness)
summary(lm_richness_NAP)
lm_richness_NAP <- lm(richness~NAP, data = survey_data_richness)
summary(lm_richness_NAP)
lm_richness_NAP <- lm(richness~I(NAP), data = survey_data_richness)
summary(lm_richness_NAP)
geom_density(aes(x=residuals(lm_richness_NAP))
geom_density(aes(x=residuals(lm_richness_NAP))
ggplot()+
geom_density(aes(x=residuals(lm_richness_NAP)), bw=20)
ggplot()+
geom_density(aes(x=residuals(lm_richness_NAP)), bw=5)
ggplot()+
geom_density(aes(x=residuals(lm_richness_NAP)), bw=1)
ggplot()+
geom_density(aes(x=residuals(lm_richness_NAP)), bw=2)
ggplot()+
geom_density(aes(x=residuals(lm_richness_NAP)), bw=2)+
xlim(-5,5)
ggplot(survey_data_richness) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
lm_richness_NAP <- lm(richness~I(NAP), data = survey_data_richness[sample == c(1:8,10:21,23:45)])
lm_richness_NAP <- lm(richness~I(NAP), data = survey_data_richness[1:8,10:21,23:45,])
lm_richness_NAP <- lm(richness~I(NAP), data = survey_data_richness[sample!9,22])
lm_richness_NAP <- lm(richness~I(NAP), data = survey_data_richness[sample!=9,22])
lm_richness_NAP <- lm(richness~I(NAP), data = survey_data_richness[-c(9,22),])
summary(lm_richness_NAP)
ggplot(survey_data_richness) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
lm_richness_NAP <- lm(richness~I(NAP), data = survey_data_richness[,-c(9,22)])
summary(lm_richness_NAP)
ggplot(survey_data_richness) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
lm_richness_NAP <- lm(richness~I(NAP), data = survey_data_richness[-c(9,22),])
summary(lm_richness_NAP)
ggplot(survey_data_richness) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
survey_data_no_outliers <- survey_data_richness[-c(9,22),]
View(survey_data_richness)
survey_data_no_outliers <- survey_data_richness[,-c(9,22)]
View(survey_data_richness)
survey_data_no_outliers <- survey_data_richness[,-c(9,22),,drop=F]
survey_data_no_outliers <- survey_data_richness[,-c(9,22)]
survey_data_richness[,-c(9,22)]
lm_richness_NAP <- lm(richness~I(NAP), data = survey_data_richness[!c(9,22),])
survey_data_richness[!c(9,22).]
survey_data_richness[!c(9,22),]
survey_data_richness[,!c(9,22)]
survey_data_richness[-c(9,22),]
lm_richness_NAP <- lm(richness~I(NAP), data = survey_data_richness[-c(9,22),])
summary(lm_richness_NAP)
ggplot(survey_data_richness) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
survey_data_no_outliers <- survey_data_richness[-c(9,22),]
ggplot(survey_data_no_outliers) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
summary(lm_richness_NAP)
lm_richness_NAP <- lm(richness~I(NAP), data = survey_data_richness)
ggplot(survey_data_richness) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
ggplot(survey_data_no_outliers) +
geom_point(aes(x=NAP, y=richness)) +
geom_abline(intercept = lm_richness_NAP$coefficients[1], slope = lm_richness_NAP$coefficients[2], color = 2, size=2)
